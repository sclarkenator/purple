view: conversion {
  sql_table_name: "OPTIMIZELY"."CONVERSION"
    ;;

# for documentation, go to: https://docs.developers.optimizely.com/optimizely-data/docs/enriched-events-data-specification


  dimension: pk {
    primary_key: yes
    hidden: yes
    type: string
    sql: ${TABLE}."UUID" || ${TABLE}."TIMESTAMP" ;;
  }

  dimension: account_id {
    type: string
    hidden: yes
    sql: ${TABLE}."ACCOUNT_ID" ;;
  }

  # dimension: attributes {
  #   type: string
  #   hidden: yes
  #   sql: ${TABLE}."ATTRIBUTES" ;;
  # }

  dimension: campaign_id {
    type: string
    description: "ID of the personalization campaign in Optimizely"
    sql: ${TABLE}."CAMPAIGN_ID" ;;
  }

  dimension: client_engine {
    type: string
    hidden: yes
    sql: ${TABLE}."CLIENT_ENGINE" ;;
  }

  dimension: client_version {
    type: string
    hidden: yes
    sql: ${TABLE}."CLIENT_VERSION" ;;
  }

  dimension: entity_id {
    type: string
    hidden: yes
    sql: ${TABLE}."ENTITY_ID" ;;
  }

  dimension: event_name {
    type: string
    description: "ID/Name of event as identified in Optimizely. To get purchases use totalRevenue"
    sql: ${TABLE}."EVENT_NAME" ;;
  }

  dimension: event_type {
    type: string
    description: "Event types as defined by Optimizely"
    sql: ${TABLE}."EVENT_TYPE" ;;
  }

  dimension: experiment_id {
    type: string
    description: "ID of the experiment in Optimizely"
    sql: ${TABLE}."EXPERIMENT_ID" ;;
  }

  # dimension: experiments {
  #   type: string
  #   hidden: yes
  #   sql: ${TABLE}."EXPERIMENTS" ;;
  # }

  dimension_group: insert_ts {
    type: time
    hidden: yes
    timeframes: [
      raw,
      time,
      date,
      week,
      month,
      quarter,
      year
    ]
    sql: CAST(${TABLE}."INSERT_TS" AS TIMESTAMP_NTZ) ;;
  }

  dimension: is_holdback {
    type: string
    description: "If the user was in the holdback group of a personalization campaign (can be considered the control in a personalization)"
    sql: ${TABLE}."IS_HOLDBACK" ;;
  }

  dimension_group: process_timestamp {
    type: time
    hidden: yes
    timeframes: [
      raw,
      time,
      date,
      week,
      month,
      quarter,
      year
    ]
    sql: ${TABLE}."PROCESS_TIMESTAMP" ;;
  }

  dimension: quantity {
    type: number
    description: "Attribute of an event used to compute quantity metrics in Optimizely"
    sql: ${TABLE}."QUANTITY" ;;
  }

  dimension: referer {
    type: string
    sql: ${TABLE}."REFERER" ;;
  }

  dimension: revenue {
    type: number
    value_format_name: usd
    description: "Attribute of an event used to compute revenue metrics in Optimizely"
    sql: ${TABLE}."REVENUE" * 100 ;;
  }

  dimension: revision {
    type: string
    hidden: yes
    sql: ${TABLE}."REVISION" ;;
  }

  dimension: session_id {
    type: string
    description: "Unique session id generated by the server"
    sql: ${TABLE}."SESSION_ID" ;;
  }

  dimension: tags {
    type: string
    hidden: yes
    sql: ${TABLE}."TAGS" ;;
  }

  dimension_group: timestamp {
    hidden: yes
    type: time
    label: "Event Timestamp"
    description: "Time of the Event"
    convert_tz: no
    timeframes: [
      raw,
      time,
      date,
      week,
      month,
      quarter,
      year
    ]
    sql: ${TABLE}."TIMESTAMP" ;;
  }

  measure: session_date {
    type: date
    sql: max(${TABLE}."TIMESTAMP") ;;
  }


  dimension_group: update_ts {
    type: time
    timeframes: [
      raw,
      time,
      date,
      week,
      month,
      quarter,
      year
    ]
    sql: CAST(${TABLE}."UPDATE_TS" AS TIMESTAMP_NTZ) ;;
  }

  dimension: user_agent {
    type: string
    hidden: yes
    sql: ${TABLE}."USER_AGENT" ;;
  }

  dimension: user_ip {
    type: string
    hidden: yes
    sql: ${TABLE}."USER_IP" ;;
  }

  dimension: uuid {
    type: string
    hidden: yes
    description: "Event UUID generated by the client. Used by Optimizely to de-duplicate events"
    sql: ${TABLE}."UUID" ;;
  }

  dimension: value {
    type: number
    description: "Attribute of an event used to compute value/numeric metrics in Optimizely"
    sql: ${TABLE}."VALUE" ;;
  }

  dimension: variation_id {
    type: string
    description: "ID of the variation in Optimizely"
    sql: ${TABLE}."VARIATION_ID" ;;
  }

  dimension: visitor_id {
    type: string
    description: "User/visitor identifier set by the client"
    sql: ${TABLE}."VISITOR_ID" ;;
  }

  measure: event_count {
    type: count
    description: "Number of events"
    #drill_fields: [event_name]
  }

  measure: experiment_count {
    type: count_distinct
    description: "Number of experiments"
    sql: ${TABLE}."EXPERIMENT_ID" ;;
  }
}
